/*
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
  time-to-max-speed-ms = <300>;
  acceleration-exponent = <0>;
  delay-ms = <0>;
};

#define U_MOUSE_MOVE_MAX 1700

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

/ {
    macros {
        option_backspace: option_backspace {
            compatible = "zmk,behavior-macro";
            label = "option_backspace";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_ALT>,
                <&macro_tap &kp BACKSPACE>,
                <&macro_release &kp LEFT_ALT>;
        };

        option_delete: option_delete {
            compatible = "zmk,behavior-macro";
            label = "option_delete";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_ALT>,
                <&macro_tap &kp DELETE>,
                <&macro_release &kp LEFT_ALT>;
        };

	command_backspace: command_backspace{
            compatible = "zmk,behavior-macro";
            label = "command_backspace";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_COMMAND>,
                <&macro_tap &kp BACKSPACE>,
                <&macro_release &kp LEFT_COMMAND>;
        };

	command_delete: command_delete{
            compatible = "zmk,behavior-macro";
            label = "command_delete";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_COMMAND>,
                <&macro_tap &kp DELETE>,
                <&macro_release &kp LEFT_COMMAND>;
        };

	com_tab: com_tab {
            compatible = "zmk,behavior-macro";
            label = "com_tab";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_COMMAND>,
                <&macro_tap &kp TAB>,
                <&macro_release &kp LEFT_COMMAND>;
        };

        opt_lctrl: opt_lctrl {
            compatible = "zmk,behavior-macro";
            label = "opt_lctrl";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LEFT_CONTROL &kp LEFT_ALT>,
		<&macro_pause_for_release>,
		<&macro_release &kp LEFT_CONTROL &kp LEFT_ALT>;
        };

        opt_com_lctrl: opt_com_lctrl {
            compatible = "zmk,behavior-macro";
            label = "opt_com_lctrl";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LEFT_ALT &kp LEFT_COMMAND &kp LEFT_CONTROL>,
		<&macro_pause_for_release>,	
                <&macro_release &kp LEFT_ALT &kp LEFT_COMMAND &kp LEFT_CONTROL>;
        };

        opt_cmd_f: opt_cmd_f {
            compatible = "zmk,behavior-macro";
            label = "opt_cmd_f";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_ALT &kp LEFT_COMMAND>,
                <&macro_tap &kp F>,
                <&macro_release &kp LEFT_ALT &kp LEFT_COMMAND>;
        };

        opt_com_larrow: opt_com_larrow {
            compatible = "zmk,behavior-macro";
            label = "opt_com_larrow";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_ALT &kp LEFT_COMMAND>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_release &kp LEFT_ALT &kp LEFT_COMMAND>;
        };

        com_enter: com_enter {
            compatible = "zmk,behavior-macro";
            label = "com_enter";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_COMMAND>,
                <&macro_tap &kp ENTER>,
                <&macro_release &kp LEFT_COMMAND>;
        };

        com_grave: com_grave {
            compatible = "zmk,behavior-macro";
            label = "com_grave";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_COMMAND>,
                <&macro_tap &kp GRAVE>,
                <&macro_release &kp LEFT_COMMAND>;
        };

        opt_com_rarrow: opt_com_rarrow {
            compatible = "zmk,behavior-macro";
            label = "opt_com_rarrow";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_ALT &kp LEFT_COMMAND>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_release &kp LEFT_ALT &kp LEFT_COMMAND>;
        };

        mc_1: mc_1 {
            compatible = "zmk,behavior-macro";
            label = "mc_1";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>,
                <&macro_tap &kp F1>,
                <&macro_release &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>;
        };

	mc_2: mc_2 {
            compatible = "zmk,behavior-macro";
            label = "mc_2";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>,
                <&macro_tap &kp F2>,
                <&macro_release &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>;
        };

	mc_3: mc_3 {
            compatible = "zmk,behavior-macro";
            label = "mc_3";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>,
                <&macro_tap &kp F3>,
                <&macro_release &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>;
        };

	mc_4: mc_4 {
            compatible = "zmk,behavior-macro";
            label = "mc_4";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings =
                <&macro_press &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>,
                <&macro_tap &kp F4>,
                <&macro_release &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_COMMAND &kp LSHIFT>;
        };	
    };

    combos {
        compatible = "zmk,combos";
	
	left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <14 15 16>;
        };
	
	right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20 21>;
        };

	slash {
            bindings = <&kp SLASH>;
            key-positions = <18 19 20>;
        };
	
	backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <15 16 17>;
        };
	
	left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27 28>;
        };
	
	right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32 33>;
        };

	plus {
            bindings = <&kp PLUS>;
            key-positions = <8 9 10>;
        };
	
	equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 8 9>;
        };

 	minus {
            bindings = <&kp MINUS>;
            key-positions = <1 2 3>;
        };
	
	underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <2 3 4>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <25 26 27>;
        };
	
	double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <32 33 34>;
        };
	
        colon {
            bindings = <&kp COLON>;
            key-positions = <20 21 22>;
        };
	
	semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <13 14 15>;
        };
	
	escape {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
	
	tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };
	
	opt_backspace{
            bindings = <&option_backspace>;
            key-positions = <13 14>;
        };
 	
	opt_delete{
            bindings = <&option_delete>;
            key-positions = <21 22>;
        };

	cmd_backspace{
            bindings = <&command_backspace>;
            key-positions = <13 14 15 16>;
        };   

	cmd_delete{
            bindings = <&command_delete>;
            key-positions = <19 20 21 22>;
        };   

    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &none &kp W           &kp L            &kp R          &kp B            &kp Z            &kp Q              &kp U          &kp D         &kp J                &kp BACKSPACE         &none
  &none &kp S           &kp H            &kp N          &kp T            &kp COMMA        &kp DOT            &kp A          &kp E         &kp O                &kp I                 &none
  &none &kp F           &kp M            &kp V          &kp C            &caps_word       &kp G              &kp P          &kp X         &kp K                &kp Y                 &none
                                         &sk LSHIFT     &lt 1 ENTER      &sk LEFT_ALT     &kp LEFT_CONTROL   &lt 2 SPACE    &sk LEFT_COMMAND
            >;
        };

        symbols_1 {
            bindings = <
  &none &kp F7          &kp F8           &kp F9         &kp F10          &bt BT_CLR        &kp BACKSPACE     &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9         &none                 &none
  &none &kp F4          &kp F5           &kp F6         &kp F11          &bt BT_NXT        &kp SPACE         &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6         &kp DOT               &none
  &none &kp F1          &kp F2           &kp F3         &kp F12          &none             &kp NUMBER_0      &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3         &kp COMMA             &none
                                         &trans         &trans           &trans            &trans            &mo 3          &trans
            >;
        };

        symbols_2 {
            bindings = <
 &none &kp CARET        &kp PIPE         &kp PERCENT    &kp DOLLAR       &none             &kp TILDE         &mkp LCLK      &mkp RCLK     &kp C_PLAY_PAUSE     &kp C_VOL_UP          &none
 &none &kp AT           &kp ASTERISK     &kp QUESTION   &kp EXCL         &none             &none             &mmv MOVE_LEFT &mmv MOVE_DOWN&mmv MOVE_UP         &mmv MOVE_RIGHT       &none
 &none &kp HASH         &kp AMPERSAND    &none          &none            &kp CAPSLOCK      &kp GRAVE         &none          &none         &kp C_MUTE           &kp C_VOLUME_DOWN     &none
                                         &trans         &mo 3            &trans            &trans            &trans         &trans
            >;
        };

        navigation_3 {
            bindings = <
  &none &com_tab        &none            &opt_lctrl     &opt_com_lctrl   &opt_cmd_f        &kp HOME          &kp PAGE_UP    &kp PAGE_DOWN &kp END              &com_grave            &none
  &none &opt_com_larrow &kp LEFT_ALT     &kp LEFT_SHIFT &kp LEFT_COMMAND &com_enter        &kp LEFT_ARROW    &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW      &opt_com_rarrow       &none
  &none &none           &none            &none          &none            &none             &none             &mc_1          &mc_2	  &mc_3                &mc_4                 &none
                                         &trans         &trans           &trans            &trans            &trans         &trans
            >;
        };

        extra_4 {
            bindings = <
  &none &none           &none            &none          &none            &none             &none             &none          &none         &none                &none                 &none
  &none &none           &none            &none          &none            &none             &none             &none          &none         &none                &none                 &none
  &none &none           &none            &none          &none            &none             &none             &none          &none         &none                &none                 &none
                                         &trans         &trans           &trans            &trans            &trans         &trans
            >;
        };
    };
};
